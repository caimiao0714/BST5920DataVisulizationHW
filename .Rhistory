minn_csv = readr::read_csv("MinnesotaEducation.csv")
minn_csv = readr::read_csv("./Homework5/MinnesotaEducation.csv")
is.numeric(3)
as.factor(c(1, 1.1))
is.numeric(c(3, 2, 1))
is.integer(c(3, 2, 1))
is.integer(1)
is.integer(10)
is.integer(10.1)
?is.integer
is.wholenumber(c(3, 2, 1))
is.wholenumber(c(3, 2, 1))
b = as.integer(3)
is.integer(b)
as.integer(3.1)
as.integer(b)
as.integer(c(4.1, 5.2, 6.3, 6.4))
x = data.frame(x_1 = c(1, 2, 3), x_2 = c(1.1, 2.1, 3.1))
x
tellint = function(col){
all.equal(col, as.integer(col))
}
x[,unlist(lapply(x, tellint)) ]
lapply(x, tellint)
as.logical("Mean relative difference: 0.04761905"
)
as.logic("Mean relative difference: 0.04761905"
)
isTRUE("Mean relative difference: 0.04761905"
)
isTRUE(TRUE
)
tellint = function(col){
isTRUE(all.equal(col, as.integer(col)), )
}
x[,unlist(lapply(x, tellint)) ]
unlist(lapply(x, tellint)
)
lapply(x, tellint)
isTRUE(all.equal(col, as.integer(col)) )
tellint = function(col){
isTRUE(all.equal(col, as.integer(col)) )
}
x[,unlist(lapply(x, tellint)) ]
x = data.frame(x_1 = c(1, 2, 3), x_2 = c(1.1, 2.1, 3.1), x_3 = c(4, 5, 6), x_4 = A:C)
x = data.frame(x_1 = c(1, 2, 3), x_2 = c(1.1, 2.1, 3.1), x_3 = c(4, 5, 6), x_4 = letters[1:3])
x
tellint = function(col){
isTRUE(all.equal(col, as.integer(col)) )
}
x[,unlist(lapply(x, tellint)) ]
install.packages("tigris")
library(tigris)
library(GISTools)
library(dplyr)
pa = counties("Pennsylvania")    ### tigris package
Minnesota = tigris::counties("Minnesota")
PA_Unemployment = read.csv("PA_Unemployment.csv")
PA_Unemployment = read.csv("./Homework5/PA_Unemployment.csv")
minn_csv = readr::read_csv("./Homework5/MinnesotaEducation.csv")
pa[[4]]
pa[[1]]
pa[[2]]
pa[[3]]
pa[[4]]
pa[[5]]
pa[[6]]
pa[[12]]
pa[[20]]
unlist(pa)
plot(Minnesota)
ggplot2(Minnesota) + geom_polygon()
require(ggplot2)
ggplot2(Minnesota) + geom_polygon()
ggplot(Minnesota) + geom_polygon()
names(pa[[16]])
install.packages("maps")
head(Minnesota)
names(str(Minnesota))
library(maps)
Minnesota1 = map_data("Minnesota")
class(Minnesota)
t1 = as.data.frame(Minnesota)
View(t1)
names(t1)
Minnesota %>% as_tibble() %>%
ggplot(aes(INTPTLAT, INTPTLON)) + geom_polygon()
plot( pa )
lat_cent = pa[[16]]
long_cent = pa[[17]]
plot( pa )
points(long_cent,lat_cent)
pa[[5]]
Minnesota[[4]]
Minnesota[[5]]
Minnesota[[16]]
shades = shading( c(4.0,5.0,6.0) , cols=brewer.pal(4,"Blues"))
?
brewer.pal
library(GISTools)
install.packages("GISTools")
library(GISTools)
shading( c(4.0,5.0,6.0) , cols=brewer.pal(4,"Blues"))
shades = shading( c(4.0,5.0,6.0) , cols=brewer.pal(4,"Blues"))
choropleth( pa , PA_Unemployment$UERate , shades , main="WRONG")  ## WRONG!
choro.legend( -79 , 42.6 , shades , title="Unemployment Rate" , cex=0.9 )
MN_FIPS = Minnesota[[4]]
counties_list_tigrisMinnesota[[5]]
lat_cent = Minnesota[[16]]
long_cent = Minnesota[[17]]
counties_list_tigris
counties_list_tigris = Minnesota[[5]]
counties_list_tigris
minn_csv$CountyName
minn_csv = readr::read_csv("./Homework5/MinnesotaEducation.csv")
head(minn_csv)
counties_list_tigris
minn_csv$County
?shading
pa = counties("Pennsylvania")    ### tigris package
plot( pa )
PA_FIPS = pa[[4]]
counties_list_tigris = pa[[5]]
pa[[4]]
lat_cent = pa[[16]]
long_cent = pa[[17]]
plot( pa )
points(long_cent,lat_cent)
seed(12345)
out = rnorm(67,0,1)
choropleth( pa , out )
PA_Unemployment$CountyFIPS
CoName = PA_Unemployment$CountyName
CoName
UERate
UERate = PA_Unemployment$UERate
CoFIPS = PA_Unemployment$CountyFIPS
counties_list_tigris
df1 = data.frame( CoFIPS , CoName , UERate , counties_list_tigris )
View(df1)
df2 = arrange( df1 , counties_list_tigris )
View(df2)
df3 = data.frame( df2 , UERate )
df4 = arrange( df3 , CoFIPS )
View(df3)
View(df4)
PA_FIPS
counties_list_tigris
View(PA_Unemployment)
CoFIPS = PA_Unemployment$CountyFIPS
CoName = PA_Unemployment$CountyName
UERate = PA_Unemployment$UERate
df1 = data.frame( CoFIPS , CoName , UERate , counties_list_tigris )
df2 = arrange( df1 , counties_list_tigris )
df3 = data.frame( df2 , UERate )
df4 = arrange( df3 , CoFIPS )
UERate_Corrected = df4$UERate.1
windows( 12 , 8 )
shades = shading( c(4.0,5.0,6.0) , cols=brewer.pal(4,"Blues"))
choropleth( pa , UERate_Corrected , shades , main="Correct")  ## RIGHT!
choro.legend( -79 , 42.6 , shades , title="Unemployment Rate" , cex=0.9 )
PA_Unemployment %>%
select(CountyFIPS, CountyName, UERate) %>%
mutate(counties_list_tigris = counties_list_tigris) %>%
arrange(counties_list_tigris) %>%
mutate(UE_corrected = PA_Unemployment$UERate) %>%
arrange(CountyFIPS) %>%
select(UE_corrected) %>%
unlist()
PA_Unemployment %>%
select(CountyFIPS, CountyName, UERate)
names(PA_Unemployment)
PA_Unemployment %>%
select(CountyFIPS, CountyName, UERate)
PA_Unemployment
class(PA_Unemployment)
?select
?select()
PA_Unemployment %>%
select(CountyFIPS, CountyName, UERate)
PA_Unemployment %>%
dplyr::select(CountyFIPS, CountyName, UERate) %>%
mutate(counties_list_tigris = counties_list_tigris) %>%
arrange(counties_list_tigris) %>%
mutate(UE_corrected = PA_Unemployment$UERate) %>%
arrange(CountyFIPS) %>%
dplyr::select(UE_corrected) %>%
unlist()
PA_Unemployment %>%
dplyr::select(CountyFIPS, CountyName, UERate) %>%
mutate(counties_list_tigris = counties_list_tigris) %>%
arrange(counties_list_tigris) %>%
mutate(UE_corrected = PA_Unemployment$UERate) %>%
arrange(CountyFIPS) %>%
dplyr::select(UE_corrected)
t = PA_Unemployment %>%
dplyr::select(CountyFIPS, CountyName, UERate) %>%
mutate(counties_list_tigris = counties_list_tigris) %>%
arrange(counties_list_tigris) %>%
mutate(UE_corrected = PA_Unemployment$UERate) %>%
arrange(CountyFIPS) %>%
dplyr::select(UE_corrected) %>%
unlist()
choropleth( pa , UERate_Corrected , shades , main="Correct")  ## RIGHT!
choro.legend( -79 , 42.6 , shades , title="Unemployment Rate" , cex=0.9 )
choropleth( pa , UERate_Corrected , shades , main="zz")  ## RIGHT!
choropleth( pa , t , shades , main="z111z")  ## RIGHT!
choropleth( pa , UERate_Corrected , shades , main="zz")  ## RIGHT!
choropleth( pa , UERate_Corrected , shades , main="zz")  ## RIGHT!
choropleth( pa , t , shades , main="z111z")  ## RIGHT!
choropleth( pa , UERate_Corrected , shades , main="zz")  ## RIGHT!
choropleth( pa , t , shades , main="z111z")  ## RIGHT!
choropleth( pa , UERate_Corrected , shades , main="zz")  ## RIGHT!
choropleth( pa , t , shades , main="z111z")  ## RIGHT!
names(minn_csv)
View(Minnesota)
View(minn_csv)
Minnesota[[5]]
tibble(County = Minnesota[[5]]) %>% left_join(minn_csv)
zz = tibble(County = Minnesota[[5]]) %>% left_join(minn_csv)
View(zz)
names(zz)
quantile(zz$AllPctHS)
windows( 12 , 8 )
shades = shading( c(89.05, 90.8, 92.55) , cols=brewer.pal(4,"Blues"))
choropleth( Minnesota , zz$AllPctHS , shades , main="high school")
windows( 12 , 8 )
shades = shading( c(89.05, 90.8, 92.55) , cols=brewer.pal(4,"Blues"))
choropleth( Minnesota , zz$AllPctHS , shades , main="choropleth maps for education level in Minnesota, USA")
choro.legend( -79 , 42.6 , shades , title="the percentages of 18-24 year olds who completed high school" , cex=0.9 )
?choro.legend()
choro.legend( -94 , 46.6 , shades , title="the percentages of 18-24 year olds who completed high school" , cex=0.9 )
windows( 12 , 8 )
shades = shading( c(89.05, 90.8, 92.55) , cols=brewer.pal(4,"Blues"))
choropleth( Minnesota , zz$AllPctHS , shades , main="choropleth maps for education level in Minnesota, USA")
choro.legend( -94 , 46.6 , shades , title="the percentages of 18-24 year olds who completed high school" , cex=0.9 )
windows( 12 , 8 )
shades = shading( c(89.05, 90.8, 92.55) , cols=brewer.pal(4,"Blues"))
choropleth( Minnesota , zz$AllPctHS , shades , main="choropleth maps for percent of 18-24 year olds who completed high school in Minnesota, USA")
choro.legend( -94 , 46.6 , shades , title="Percentages" , cex=0.9 )
shades = shading( c(89.05, 90.8, 92.55) , cols=brewer.pal(4,"Blues"))
choropleth( Minnesota , zz$AllPctHS , shades , main="choropleth maps for percent of 18-24 year olds who completed high school in Minnesota, USA")
choro.legend( -93 , 46.6 , shades , title="Percentages" , cex=0.9 )
choro.legend( -90 , 46.6 , shades , title="Percentages" , cex=0.9 )
shades = shading( c(89.05, 90.8, 92.55) , cols=brewer.pal(4,"Blues"))
choropleth( Minnesota , zz$AllPctHS , shades , main="choropleth maps for percent of 18-24 year olds who completed high school in Minnesota, USA")
choro.legend( -90 , 46.6 , shades , title="Percentages" , cex=0.9 )
shades = shading( c(89.05, 90.8, 92.55) , cols=brewer.pal(4,"Blues"))
choropleth( Minnesota , zz$AllPctHS , shades , main="choropleth maps for percent of 18-24 year olds who completed high school in Minnesota, USA")
choro.legend( -90 , 45 , shades , title="Percentages" , cex=1 )
shades = shading( c(89.05, 90.8, 92.55) , cols=brewer.pal(4,"Blues"))
choropleth( Minnesota , zz$AllPctHS , shades , main="choropleth maps for percent of 18-24 year olds who completed high school in Minnesota, USA")
choro.legend( -90 , 46 , shades , title="Percentages" , cex=1 )
shades = shading( c(89.05, 90.8, 92.55) , cols=brewer.pal(4,"Blues"))
choropleth( Minnesota , zz$AllPctHS , shades , main="choropleth maps for percent of 18-24 year olds who completed high school in Minnesota, USA")
choro.legend( -90 , 46 , shades , title="Percentages" , cex=1 )
shades = shading( c(89.05, 90.8, 92.55) , cols=brewer.pal(4,"Blues"))
choropleth( Minnesota , zz$AllPctHS , shades , main="choropleth maps for percent of 18-24 year olds who completed high school in Minnesota, USA")
choro.legend( -92 , 46 , shades , title="Percentages" , cex=1 )
shades = shading( c(89.05, 90.8, 92.55) , cols=brewer.pal(4,"Blues"))
choropleth( Minnesota , zz$AllPctHS , shades , main="choropleth maps for percent of 18-24 year olds who completed high school in Minnesota, USA")
choro.legend( -91 , 46 , shades , title="Percentages" , cex=1 )
shades = shading( c(89.05, 90.8, 92.55) , cols=brewer.pal(4,"Blues"))
choropleth( Minnesota , zz$AllPctHS , shades , main="choropleth maps for percent of 18-24 year olds \t who completed high school in Minnesota, USA")
choro.legend( -91 , 46 , shades , title="Percentages" , cex=1 )
shades = shading( c(89.05, 90.8, 92.55) , cols=brewer.pal(4,"Blues"))
choropleth( Minnesota , zz$AllPctHS , shades , main="choropleth maps for percent of 18-24 year olds \n who completed high school in Minnesota, USA")
choro.legend( -91 , 46 , shades , title="Percentages" , cex=1 )
names(zz)
quantile(zz$PctBach)
quantile(zz$PctBach)[2:4]
8*1.5
install.packages('tinytex')
tinytex::install_tinytex()
tinytex::install_tinytex(force = T)
load("m.feiai.Rdata")
load("KaplanMeierR/m.feiai.Rdata")
load("KaplanMeierR/m.shiguanai.Rdata")
load("KaplanMeierR/m.weiai.Rdata")
getwd()
load("KaplanMeierR/m.feiai.Rdata")
load("KaplanMeierR/m.shiguanai.Rdata")
load("KaplanMeierR/m.weiai.Rdata")
m.weiai <- m.weiai[m.weiai$p27<100,]
m.shiguanai<-m.shiguanai[m.shiguanai$p27<90,]
save(m.weiai, file = "KaplanMeierR/m.weiai.Rdata")
save(m.shiguanai, file = "KaplanMeierR/m.shiguanai.Rdata")
library(survival)
require(survminer)
require(plyr)
total <- rbind(m.feiai, m.shiguanai, m.weiai)
total$integ <- plyr::revalue(factor(total$integ),c("0"="Ordinary Hospitals", "1"="Medical consortium Hospitals"))
utotalPSM <- Surv(total$p27, total$recovery)
ggsurvplot(survfit(utotalPSM ~ integ, data = total),
pval = TRUE,
conf.int = TRUE,
legend.title = "Hospital type",
legend.labs = c("Ordinary Hospitals", "Medical Consortium Hospitals"),
submain  = "Kaplan-Meier plot for a pool of three patient cohorts",
xlab = "Survival length of stay",
palette = c("firebrick1", "green4"),
font.submain = c(16, "bold"))
load("KaplanMeierR/m.feiai.Rdata")
load("KaplanMeierR/m.shiguanai.Rdata")
load("KaplanMeierR/m.weiai.Rdata")
library(survival)
require(survminer)
require(plyr)
total <- rbind(m.feiai, m.shiguanai, m.weiai)
total$integ <- plyr::revalue(factor(total$integ),c("0"="Ordinary Hospitals", "1"="Medical consortium Hospitals"))
utotalPSM <- Surv(total$p27, total$recovery)
plot_pool = ggsurvplot(survfit(utotalPSM ~ integ, data = total),
pval = TRUE,
conf.int = TRUE,
legend.title = "Hospital type",
legend.labs = c("Ordinary Hospitals", "Medical Consortium Hospitals"),
submain  = "Kaplan-Meier plot for a pool of three patient cohorts",
xlab = "Survival length of stay",
palette = c("firebrick1", "green4"),
font.submain = c(16, "bold"))
ggsave(file = 'plot_pool.svg', plot_pool, width = 10, height = 8)
setwd("./KaplanMeierR")
load("m.feiai.Rdata")
